-- Prefan Access Controller
-- Rank Creator + Editor

local PLUGIN = {}

local MODULE = {
	ID = "render-panel",
	Name = "3D Render Panel",
	Disc = "A plugin that creates a render panel on the map!",
	Owner = "Prefanatic",
	Depends = {},
	Table = PLUGIN,
	Enabled = true,
}

if SERVER then
	
	PLUGIN:CreateTable( "exsto_plugin_panel", {
		Pos = "text",
		Ang = "text",
		Map = "text",
		}
	)

	PLUGIN.Pos = Vector( 0, 0, 0 )
	PLUGIN.Ang = Angle( 0, 0, 0 )
	PLUGIN.Panel = nil
	
	function PLUGIN.Init()
	
		-- Create the ent, if we don't already exist
		if !PLUGIN.Panel then
		
			PLUGIN.Panel = ents.Create( "display_panel" )
			
				PLUGIN.Panel:SetModel( "models/props_borealis/borealis_door001a.mdl" )
				PLUGIN.Load()
				print( "Panel Load Details!\n Pos = " .. tostring( PLUGIN.Pos ) )
				PLUGIN.Panel:SetPos( PLUGIN.Pos )
				PLUGIN.Panel:SetAngles( PLUGIN.Ang )
				PLUGIN.Panel:Spawn()
				
				local hostname = GetConVarString( "hostname" ):Trim()
				
				PLUGIN.SetHostname( hostname )
				
		end
		
	end
	hook.Add( "PlayerInitialSpawn", "exsto_SpawnPanel", PLUGIN.Init )
	concommand.Add( "ReloadPanel", function( ply )
		if PLUGIN.Panel and PLUGIN.Panel:IsValid() then PLUGIN.Panel:Remove() end
		PLUGIN.Panel = nil
		PLUGIN.Init()
	end )
	
	function PLUGIN.Load()
	
		local data = FEL.Query( "SELECT Pos, Ang FROM exsto_plugin_panel WHERE Map = '" .. game.GetMap() .. "';" )[1]

		if !data then
			FEL.AddData( "exsto_plugin_panel", {
				Look = {
					Map = game.GetMap(),
				},
				Data = {
					Pos = FEL.NiceEncode( Vector( 0, 0, 10 ) ),
					Ang = FEL.NiceEncode( Angle( 0, 180, 0 ) ),
					Map = game.GetMap(),
				},
				Options = {
					Update = false,
				},
			} )
			
			return Vector( 0, 0, 10 ), Angle( 0, 180, 0 )
		end
				
		PLUGIN.Pos = FEL.NiceDecode( data.Pos )
		PLUGIN.Ang = FEL.NiceDecode( data.Ang )
		
	end
	
	function PLUGIN.SetPos( ply )
	
		local pos = ply:GetPos() + Vector( 0, 0, 100 )
		
		if PLUGIN.Panel:IsValid() then PLUGIN.Panel:SetPos( pos ) end
		
		exsto.Print( exsto_CHAT, ply, COLOR.PAC, "Setting the panel to your position!" )

		FEL.AddData( "exsto_plugin_panel", {
				Look = {
					Map = game.GetMap(),
				},
				Data = {
					Pos = FEL.NiceEncode( pos ),
					Map = game.GetMap(),
				},
			} )
		
		
	end
	exsto.AddChatCommand( "setpanelpos", {
		Call = PLUGIN.SetPos,
		Desc = "Sets the 3D panel pos",
		FlagDesc = "Allows users to set the position of the 3D panel.",
		Console = { "panelpos" },
		Chat = { "!panelpos" },
		Args = {},
	})
	
	function PLUGIN.SetAng( ply, p, y, r )
		
		if PLUGIN.Panel:IsValid() then PLUGIN.Panel:SetAngles( Angle( p, y, r ) ) end
		
		exsto.Print( exsto_CHAT, ply, COLOR.PAC, "Setting the panel angle to ", COLOR.RED, p, " ", y, " ", r, COLOR.PAC, "!" )

		FEL.AddData( "exsto_plugin_panel", {
				Look = {
					Map = game.GetMap(),
				},
				Data = {
					Ang = FEL.NiceEncode( Angle( p, y, r ) ),
					Map = game.GetMap(),
				},
			} )
		
	end
	exsto.AddChatCommand( "setpanelang", {
		Call = PLUGIN.SetAng,
		Desc = "Sets the 3D panel angle",
		FlagDesc = "Allows users to set the angle of the 3D panel.",
		Console = { "panelang" },
		Chat = { "!panelang" },
		Args = {Pitch = "NUMBER", Yaw = "NUMBER", Roll = "NUMBER"},
		Optionals = {Pitch = 0, Yaw = 0, Roll = 0},
	})
	
	function PLUGIN.SaveAt( ply )
		
		if PLUGIN.Panel and PLUGIN.Panel:IsValid() then
			FEL.AddData( "exsto_plugin_panel", {
				Look = {
					Map = game.GetMap(),
				},
				Data = {
					Pos = FEL.NiceEncode( PLUGIN.Panel:GetPos() ),
					Ang = FEL.NiceEncode( PLUGIN.Panel:GetAngles() ),
					Map = game.GetMap(),
				},
			} )
		end
		
		exsto.Print( exsto_CHAT, ply, COLOR.PAC, "Saving panel location!" )
			
	end
	exsto.AddChatCommand( "savepanel", {
		Call = PLUGIN.SaveAt,
		Desc = "Saves the location of the panel.",
		FlagDesc = "Allows users to save the location of the panel.",
		Console = { "savepanel" },
		Chat = { "!savepanel" },
		Args = {},
	})
	
elseif CLIENT then

end

-- Meta funcs.
function PLUGIN.GetHostname()
	return PLUGIN.Panel:GetNWString( "Hostname" )
end

function PLUGIN.SetHostname( name )
	PLUGIN.Panel:SetNWString( "Hostname", name )
end